## Extinction coefficient of human myoglobin (WIP)

The protein of human myoglobin is given below

```{python}
sequence = """GLSDGEWQLVLNVWGKVEADIPGHGQEVLIRLFKGHPETLEKFDKFKHLKSEDEMKASEDLKKHGA
TVLTALGGILKKKGHHEAEIKPLAQSHATKHKIPVKYLEFISECIIQVLQSKHPGDFGADAQGAMNKALELFRKDMASNY
KELGFQG"""
```

We want to calculate the *extinction coefficient* of this protein, we have seen that 
this can be calculated using the formula

$$
\epsilon(280 \mathrm{nm}) = N_{Trp} \epsilon_{Trp} + N_{Tyr} \epsilon_{Tyr} + N_{Cys} \epsilon_{Cys} 
$$ {#eq-extinction}

Where $N_{Trp}$ is the number of Tryptophan in the protein (and likewise for the other two terms), and the three constants $A$, $B$ and $C$ are given as 

$$
\begin{align}
\epsilon_{Trp} &= 5500 \ \mathrm{M^{−1} cm^{−1}} \\
\epsilon_{Tyr} &= 1490 \ \mathrm{M^{−1} cm^{−1}} \\
\epsilon_{Cys} &= 125 \ \mathrm{M^{−1} cm^{−1}}
\end{align}
$$

In order to calculate the formula we need to know the count of the relevant residues, 
we can use Python to get that - for example we can count the number of Tryptophan like so; 
```{python}
N_trp = sequence.count("W")
```

#### (a) Determine the number of residues

In the cell below find the number of residues

```{python}
#| solution: true
N_tyr = sequence.count("Y")
N_cys = sequence.count("C")
```

```{python}
#| exercise: true
#| eval: false
N_tyr = ... # Your code here
... # Your code here for the N_cys.
```

You can check what Python has stored each variable by using `print`

```{python}
print(N_trp)
print(f"{N_tyr = }") # This is just a way of make a string that looks nice.
print(f"{N_cys = }")
```

#### (b) Calculate the extinction coefficient 

Use equation (@eq-extinction) to calculate the extinction coefficient of human myoglobin.

```{python}
eps_trp = 5500
eps_tyr = 1490
eps_cys = 125
```

```{python}
#| exercise: true
#| eval: false
epsilon = ... # Erstat ... med din kode.
print(epsilon)
```

```{python}
#| solution: true
epsilon = eps_trp * N_trp + eps_tyr * N_tyr + eps_cys*N_cys
print(epsilon)
```
What are the units of this value? 

#### (c) Compare residue count to ProtParam 

ProtParam is an online tool that calculates various physical and chemical
parameters from a given protein sequence and is used worldwide in research laboratories.

![Protpram tool input page.](https://raw.githubusercontent.com/au-mbg/fysisk-biokemi/refs/heads/main/lessons/figures/week_46/protpram_input.png){.lightbox}

Go to ProtPram at this link: [https://web.expasy.org/protparam/](https://web.expasy.org/protparam/) and paste the 
sequence and click **Compute Parameters**. You should then see the calculated parameters, similar 
to in the image below 

![Protpram tool calculated properties.](https://raw.githubusercontent.com/au-mbg/fysisk-biokemi/refs/heads/main/lessons/figures/week_46/protpram_output.png){.lightbox}

On the output page you will see the number of residues, does that match your calculation? 

#### (d) Calculate the absorbance

Using the extinction coefficient and the molecular weight given by ProtParam, calculate the absorbance at 280 nm of a myoglobin solution at a concentration of 1 mg/mL in a cuvette with a light path of 1 cm.

```{python}
#| solution: true
molecular_weight = 17052.61 
path_length = 1 # cm 
concentration = 1 # mg/mL
```

```{python}
#| exercise: true
#| eval: false
molecular_weight = ... # Find the value on ProtPram (It has units of g/mol)
path_length = ... # Set the value of the path length
concentration = ... # Set the value of the concentraiton.
```

Remember to convert the concentration to $\mathrm{mol/L}$.

```{python}
#| exercise: true
#| eval: false
A280 = ...
print(A280)
```

```{python}
#| solution: true
A280 = concentration / molecular_weight * path_length * epsilon
print(A280)
```

This value is what is known as the A280(0.1%) of a protein, i.e. the absorbance of a given protein at a concentration of 0.1% weight/volume (= 1 g/L = 1 mg/mL). 

#### (e) Tintin 

New exercise. WIP
